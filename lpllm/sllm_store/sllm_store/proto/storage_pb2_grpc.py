# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import sllm_store.storage_pb2 as storage__pb2


class StorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoadModelAsync = channel.unary_unary(
                '/storage.Storage/LoadModelAsync',
                request_serializer=storage__pb2.LoadModelRequest.SerializeToString,
                response_deserializer=storage__pb2.LoadModelResponse.FromString,
                )
        self.ConfirmModel = channel.unary_unary(
                '/storage.Storage/ConfirmModel',
                request_serializer=storage__pb2.ConfirmModelRequest.SerializeToString,
                response_deserializer=storage__pb2.ConfirmModelResponse.FromString,
                )
        self.UnloadModel = channel.unary_unary(
                '/storage.Storage/UnloadModel',
                request_serializer=storage__pb2.UnloadModelRequest.SerializeToString,
                response_deserializer=storage__pb2.UnloadModelResponse.FromString,
                )
        self.ClearMem = channel.unary_unary(
                '/storage.Storage/ClearMem',
                request_serializer=storage__pb2.ClearMemRequest.SerializeToString,
                response_deserializer=storage__pb2.ClearMemResponse.FromString,
                )
        self.RegisterModel = channel.unary_unary(
                '/storage.Storage/RegisterModel',
                request_serializer=storage__pb2.RegisterModelRequest.SerializeToString,
                response_deserializer=storage__pb2.RegisterModelResponse.FromString,
                )
        self.GetServerConfig = channel.unary_unary(
                '/storage.Storage/GetServerConfig',
                request_serializer=storage__pb2.GetServerConfigRequest.SerializeToString,
                response_deserializer=storage__pb2.GetServerConfigResponse.FromString,
                )
        self.AllocatePoolMemory = channel.unary_unary(
                '/storage.Storage/AllocatePoolMemory',
                request_serializer=storage__pb2.AllocatePoolMemoryRequest.SerializeToString,
                response_deserializer=storage__pb2.AllocatePoolMemoryResponse.FromString,
                )
        self.FreePoolMemory = channel.unary_unary(
                '/storage.Storage/FreePoolMemory',
                request_serializer=storage__pb2.FreePoolMemoryRequest.SerializeToString,
                response_deserializer=storage__pb2.FreePoolMemoryResponse.FromString,
                )
        self.AllocateFromPool = channel.unary_unary(
                '/storage.Storage/AllocateFromPool',
                request_serializer=storage__pb2.AllocateFromPoolRequest.SerializeToString,
                response_deserializer=storage__pb2.AllocateFromPoolResponse.FromString,
                )
        self.FreeFromPool = channel.unary_unary(
                '/storage.Storage/FreeFromPool',
                request_serializer=storage__pb2.FreeFromPoolRequest.SerializeToString,
                response_deserializer=storage__pb2.FreeFromPoolResponse.FromString,
                )
        self.CopyToPool = channel.unary_unary(
                '/storage.Storage/CopyToPool',
                request_serializer=storage__pb2.CopyToPoolRequest.SerializeToString,
                response_deserializer=storage__pb2.CopyToPoolResponse.FromString,
                )
        self.CopyFromPool = channel.unary_unary(
                '/storage.Storage/CopyFromPool',
                request_serializer=storage__pb2.CopyFromPoolRequest.SerializeToString,
                response_deserializer=storage__pb2.CopyFromPoolResponse.FromString,
                )


class StorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoadModelAsync(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfirmModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnloadModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearMem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterModel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllocatePoolMemory(self, request, context):
        """Pool memory management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreePoolMemory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AllocateFromPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreeFromPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyToPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyFromPool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoadModelAsync': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadModelAsync,
                    request_deserializer=storage__pb2.LoadModelRequest.FromString,
                    response_serializer=storage__pb2.LoadModelResponse.SerializeToString,
            ),
            'ConfirmModel': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfirmModel,
                    request_deserializer=storage__pb2.ConfirmModelRequest.FromString,
                    response_serializer=storage__pb2.ConfirmModelResponse.SerializeToString,
            ),
            'UnloadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UnloadModel,
                    request_deserializer=storage__pb2.UnloadModelRequest.FromString,
                    response_serializer=storage__pb2.UnloadModelResponse.SerializeToString,
            ),
            'ClearMem': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearMem,
                    request_deserializer=storage__pb2.ClearMemRequest.FromString,
                    response_serializer=storage__pb2.ClearMemResponse.SerializeToString,
            ),
            'RegisterModel': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterModel,
                    request_deserializer=storage__pb2.RegisterModelRequest.FromString,
                    response_serializer=storage__pb2.RegisterModelResponse.SerializeToString,
            ),
            'GetServerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerConfig,
                    request_deserializer=storage__pb2.GetServerConfigRequest.FromString,
                    response_serializer=storage__pb2.GetServerConfigResponse.SerializeToString,
            ),
            'AllocatePoolMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.AllocatePoolMemory,
                    request_deserializer=storage__pb2.AllocatePoolMemoryRequest.FromString,
                    response_serializer=storage__pb2.AllocatePoolMemoryResponse.SerializeToString,
            ),
            'FreePoolMemory': grpc.unary_unary_rpc_method_handler(
                    servicer.FreePoolMemory,
                    request_deserializer=storage__pb2.FreePoolMemoryRequest.FromString,
                    response_serializer=storage__pb2.FreePoolMemoryResponse.SerializeToString,
            ),
            'AllocateFromPool': grpc.unary_unary_rpc_method_handler(
                    servicer.AllocateFromPool,
                    request_deserializer=storage__pb2.AllocateFromPoolRequest.FromString,
                    response_serializer=storage__pb2.AllocateFromPoolResponse.SerializeToString,
            ),
            'FreeFromPool': grpc.unary_unary_rpc_method_handler(
                    servicer.FreeFromPool,
                    request_deserializer=storage__pb2.FreeFromPoolRequest.FromString,
                    response_serializer=storage__pb2.FreeFromPoolResponse.SerializeToString,
            ),
            'CopyToPool': grpc.unary_unary_rpc_method_handler(
                    servicer.CopyToPool,
                    request_deserializer=storage__pb2.CopyToPoolRequest.FromString,
                    response_serializer=storage__pb2.CopyToPoolResponse.SerializeToString,
            ),
            'CopyFromPool': grpc.unary_unary_rpc_method_handler(
                    servicer.CopyFromPool,
                    request_deserializer=storage__pb2.CopyFromPoolRequest.FromString,
                    response_serializer=storage__pb2.CopyFromPoolResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'storage.Storage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Storage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoadModelAsync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/LoadModelAsync',
            storage__pb2.LoadModelRequest.SerializeToString,
            storage__pb2.LoadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConfirmModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/ConfirmModel',
            storage__pb2.ConfirmModelRequest.SerializeToString,
            storage__pb2.ConfirmModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnloadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/UnloadModel',
            storage__pb2.UnloadModelRequest.SerializeToString,
            storage__pb2.UnloadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearMem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/ClearMem',
            storage__pb2.ClearMemRequest.SerializeToString,
            storage__pb2.ClearMemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/RegisterModel',
            storage__pb2.RegisterModelRequest.SerializeToString,
            storage__pb2.RegisterModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/GetServerConfig',
            storage__pb2.GetServerConfigRequest.SerializeToString,
            storage__pb2.GetServerConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllocatePoolMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/AllocatePoolMemory',
            storage__pb2.AllocatePoolMemoryRequest.SerializeToString,
            storage__pb2.AllocatePoolMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreePoolMemory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/FreePoolMemory',
            storage__pb2.FreePoolMemoryRequest.SerializeToString,
            storage__pb2.FreePoolMemoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AllocateFromPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/AllocateFromPool',
            storage__pb2.AllocateFromPoolRequest.SerializeToString,
            storage__pb2.AllocateFromPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreeFromPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/FreeFromPool',
            storage__pb2.FreeFromPoolRequest.SerializeToString,
            storage__pb2.FreeFromPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CopyToPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/CopyToPool',
            storage__pb2.CopyToPoolRequest.SerializeToString,
            storage__pb2.CopyToPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CopyFromPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/storage.Storage/CopyFromPool',
            storage__pb2.CopyFromPoolRequest.SerializeToString,
            storage__pb2.CopyFromPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
